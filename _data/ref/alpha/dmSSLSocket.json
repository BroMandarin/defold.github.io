{
  "info": {
    "description": "<p><span class=\"file\">&lt;dmsdk/dlib/sslsocket.h&gt;</span></p>\n<p>Secure socket functions.</p>", 
    "namespace": "dmSSLSocket", 
    "name": "SSLSocket", 
    "brief": "<p>SDK Secure socket API documentation</p>"
  }, 
  "elements": [
    {
      "replaces": "", 
      "description": "", 
      "parameters": [], 
      "returnvalues": [], 
      "brief": "<p>Socket type definition</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "TYPEDEF", 
      "name": "Socket"
    }, 
    {
      "replaces": "", 
      "description": "<p>Delete a secure socket. Does not close the underlying socket</p>", 
      "parameters": [
        {
          "doc": "<p><span class=\"type\">dmSSLSocket::Socket</span> Secure socket to close</p>", 
          "name": "socket"
        }
      ], 
      "returnvalues": [
        {
          "doc": "<p>on success</p>", 
          "name": "RESULT_OK"
        }
      ], 
      "brief": "<p>delete a secure socket</p>", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">Delete</span><span class=\"p\">(</span><span class=\"n\">sslsocket</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "dmSSLSocket::Delete"
    }, 
    {
      "replaces": "", 
      "description": "<p>Create a new secure socket</p>", 
      "parameters": [
        {
          "doc": "<p><span class=\"type\">dmSocket::Socket</span> The socket to wrap</p>", 
          "name": "socket"
        }, 
        {
          "doc": "<p><span class=\"type\">const char*</span> The name of the host (e.g. \"httpbin.org\")</p>", 
          "name": "host"
        }, 
        {
          "doc": "<p><span class=\"type\">uint64_t</span> The timeout for the handshake procedure. (microseconds)</p>", 
          "name": "timeout"
        }, 
        {
          "doc": "<p><span class=\"type\">dmSSLSocket::Socket*</span> Pointer to a secure socket</p>", 
          "name": "sslsocket"
        }
      ], 
      "returnvalues": [
        {
          "doc": "<p>on succcess</p>", 
          "name": "RESULT_OK"
        }
      ], 
      "brief": "<p>create a secure socket</p>", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">Result</span> <span class=\"n\">result</span><span class=\"p\">;</span>\n<span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">Socket</span> <span class=\"n\">sslsocket</span><span class=\"p\">;</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span> <span class=\"s\">&quot;httpbin.org&quot;</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"o\">*</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">sslsocket</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">RESULT_OK</span> <span class=\"o\">==</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"c1\">// ...</span>\n<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// ...</span>\n<span class=\"p\">}</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "dmSSLSocket::New"
    }, 
    {
      "replaces": "", 
      "description": "<p>Receive data on a secure socket</p>", 
      "parameters": [
        {
          "doc": "<p><span class=\"type\">dmSSLSocket::Socket</span> Socket to receive data on</p>", 
          "name": "socket"
        }, 
        {
          "doc": "<p>Buffer to receive to</p>", 
          "name": "buffer"
        }, 
        {
          "doc": "<p>Receive buffer length</p>", 
          "name": "length"
        }, 
        {
          "doc": "<p>Number of received bytes (result)</p>", 
          "name": "received_bytes"
        }
      ], 
      "returnvalues": [
        {
          "doc": "<p>on success</p>", 
          "name": "RESULT_OK"
        }
      ], 
      "brief": "<p>receive data on a secure socket</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "dmSSLSocket::Receive"
    }, 
    {
      "replaces": "", 
      "description": "<p>Result enumeration.</p>", 
      "parameters": [], 
      "returnvalues": [], 
      "brief": "<p>result enumeration</p>", 
      "examples": "", 
      "members": [
        {
          "doc": "<p>(0)</p>", 
          "name": "dmSSLSocket::RESULT_OK"
        }, 
        {
          "doc": "<p>(-2000)</p>", 
          "name": "dmSSLSocket::RESULT_SSL_INIT_FAILED"
        }, 
        {
          "doc": "<p>(-2001)</p>", 
          "name": "dmSSLSocket::RESULT_HANDSHAKE_FAILED"
        }, 
        {
          "doc": "<p>(-2002)</p>", 
          "name": "dmSSLSocket::RESULT_WOULDBLOCK"
        }, 
        {
          "doc": "<p>(-2003)</p>", 
          "name": "dmSSLSocket::RESULT_CONNREFUSED"
        }
      ], 
      "error": "", 
      "type": "ENUM", 
      "name": "dmSSLSocket::Result"
    }, 
    {
      "replaces": "", 
      "description": "<p>Send a message on a secure socket</p>", 
      "parameters": [
        {
          "doc": "<p><span class=\"type\">dmSSLSocket::Socket</span> SSL socket to send a message on</p>", 
          "name": "socket"
        }, 
        {
          "doc": "<p>Buffer to send</p>", 
          "name": "buffer"
        }, 
        {
          "doc": "<p>Length of buffer to send</p>", 
          "name": "length"
        }, 
        {
          "doc": "<p>Number of bytes sent (result)</p>", 
          "name": "sent_bytes"
        }
      ], 
      "returnvalues": [
        {
          "doc": "<p>on success</p>", 
          "name": "RESULT_OK"
        }
      ], 
      "brief": "<p>send a message on a secure socket</p>", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "type": "FUNCTION", 
      "name": "dmSSLSocket::Send"
    }
  ]
}