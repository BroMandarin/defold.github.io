{
  "info": {
    "group": "DEFOLD SDK", 
    "description": "Profiling macros", 
    "namespace": "dmProfile", 
    "brief": "Profiling API documentation", 
    "file": "dmsdk/dlib/profile.h", 
    "path": "engine/dlib/src/dmsdk/dlib/profile.h", 
    "name": "Profile"
  }, 
  "elements": [
    {
      "replaces": "", 
      "description": "Adds a profiling scope. Excluded by default in release builds.", 
      "parameters": [
        {
          "doc": "A name for the scope", 
          "name": "a", 
          "types": [
            "const char*"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add profile scope", 
      "examples": "Profile a scope\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"n\">DM_PROFILE</span><span class=\"p\">(</span><span class=\"s\">&quot;DoWork&quot;</span><span class=\"p\">);</span>\n    <span class=\"n\">DoWork1</span><span class=\"p\">();</span>\n    <span class=\"n\">DoWork2</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROFILE"
    }, 
    {
      "replaces": "", 
      "description": "Adds a profiling scope. Excluded by default in release builds.\nAccepts a name cache value for performance.", 
      "parameters": [
        {
          "doc": "The scope name", 
          "name": "a", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The scope name hash value pointer. May be 0.", 
          "name": "a", 
          "types": [
            "dmhash_t*"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add dynamic profile scope", 
      "examples": "Create a dynamic profiling scope\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"n\">DM_PROFILE_DYN</span><span class=\"p\">(</span><span class=\"n\">work</span><span class=\"o\">-&gt;</span><span class=\"n\">m_Name</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">work</span><span class=\"o\">-&gt;</span><span class=\"n\">m_NameHash</span><span class=\"p\">);</span>\n    <span class=\"n\">work</span><span class=\"o\">-&gt;</span><span class=\"n\">DoWork</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROFILE_DYN"
    }, 
    {
      "replaces": "", 
      "description": "Send text to the profiler", 
      "parameters": [
        {
          "doc": "The format string", 
          "name": "a", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The variable argument list", 
          "name": "a", 
          "types": [
            "va_list"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "send text to the profiler", 
      "examples": "Send a string to the profiler\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROFILE_TEXT</span><span class=\"p\">(</span><span class=\"s\">&quot;Some value: %d&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROFILE_TEXT"
    }, 
    {
      "replaces": "", 
      "description": "Declare an extern property", 
      "parameters": [
        {
          "doc": "The symbol name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "Declare an extern property", 
      "examples": "Use a property declared elsewhere in the same library\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_EXTERN</span><span class=\"p\">(</span><span class=\"n\">rmtp_GameObject</span><span class=\"p\">);</span>\n<span class=\"n\">DM_PROPERTY_U32</span><span class=\"p\">(</span><span class=\"n\">rmtp_ComponentsAnim</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;#&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_GameObject</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_EXTERN"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property group", 
      "parameters": [
        {
          "doc": "The group name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "Declare a property group", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_GROUP</span><span class=\"p\">(</span><span class=\"n\">rmtp_GameObject</span><span class=\"p\">,</span> <span class=\"s\">&quot;My Group&quot;</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_GROUP"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>bool</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "bool"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "bool property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_BOOL</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyBool</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;true or false&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_BOOL"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>int32_t</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "int32_t"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "int32_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_S32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;a value&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_S32"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>uint32_t</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "uint32_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_U32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;a value&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_U32"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>float</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "float"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "float property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_F32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;a value&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_F32"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>int64_t</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "int64_t"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "int64_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_S64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;a value&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_S64"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>uint64_t</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "uint64_t"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "uint64_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_U64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;a value&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_U64"
    }, 
    {
      "replaces": "", 
      "description": "Declare a property of type <code>double</code>", 
      "parameters": [
        {
          "doc": "The property symbol/name", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The default value", 
          "name": "default", 
          "types": [
            "double"
          ]
        }, 
        {
          "doc": "The flags. Either <code>NoFlags</code> or <code>FrameReset</code>. <code>FrameReset</code> makes the value reset each frame.", 
          "name": "flags", 
          "types": [
            "uint32_t"
          ]
        }, 
        {
          "doc": "The description", 
          "name": "desc", 
          "types": [
            "const char*"
          ]
        }, 
        {
          "doc": "The parent group", 
          "name": "group", 
          "types": [
            "property*] [optional"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "double property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_F64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">FrameReset</span><span class=\"p\">,</span> <span class=\"s\">&quot;a value&quot;</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">rmtp_MyGroup</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_F64"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a bool property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "bool"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set bool property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_BOOL</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyBool</span><span class=\"p\">,</span> <span class=\"nb\">false</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_BOOL"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a int32_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "int32_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set int32_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_S32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_S32"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a uint32_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "uint32_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set uint32_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_U32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_U32"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a float property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "float"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set float property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_F32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_F32"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a int64_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "int64_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set int64_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_S64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_S64"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a uint64_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "uint64_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set uint64_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_U64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_U64"
    }, 
    {
      "replaces": "", 
      "description": "Set the value of a double property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "double"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "set double property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_SET_F64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_SET_F64"
    }, 
    {
      "replaces": "", 
      "description": "Add a value to int32_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "int32_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add to int32_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_ADD_S32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_ADD_S32"
    }, 
    {
      "replaces": "", 
      "description": "Add a value to uint32_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "uint32_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add to uint32_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_ADD_U32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_ADD_U32"
    }, 
    {
      "replaces": "", 
      "description": "Add a value to float property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "float"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add to float property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_ADD_F32</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_ADD_F32"
    }, 
    {
      "replaces": "", 
      "description": "Add a value to int64_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "int64_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add to int64_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_ADD_S64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_ADD_S64"
    }, 
    {
      "replaces": "", 
      "description": "Add a value to uint64_t property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "uint64_t"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add to uint64_t property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_ADD_U64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_ADD_U64"
    }, 
    {
      "replaces": "", 
      "description": "Add a value to double property", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }, 
        {
          "doc": "The value", 
          "name": "value", 
          "types": [
            "double"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "add to double property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_ADD_F64</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_ADD_F64"
    }, 
    {
      "replaces": "", 
      "description": "Reset a property to its default value", 
      "parameters": [
        {
          "doc": "The property", 
          "name": "name", 
          "types": [
            "symbol"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "reset property", 
      "examples": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">DM_PROPERTY_RESET</span><span class=\"p\">(</span><span class=\"n\">rmtp_MyValue</span><span class=\"p\">);</span>\n</pre></div>", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "MACRO", 
      "name": "DM_PROPERTY_RESET"
    }
  ]
}