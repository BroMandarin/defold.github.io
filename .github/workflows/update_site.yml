name: CI

on:
    repository_dispatch: {}

jobs:
    update_site:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, 'skip-ci')"
        steps: [
            { name: 'Checkout', uses: actions/checkout@v1, with: { fetch-depth: 1 } },
            { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
            { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: 11.x, architecture: x64 } },
            { name: 'Install Lunr', run: 'pip install --user lunr==0.5.5' },
            { name: 'Install Requests', run: 'pip install --user requests' },
            { name: 'Install PyYAML', run: 'pip install --user pyyaml' },
            { name: 'Show action & event', run: 'echo "Event: ${{ github.event }} Action: ${{ github.event.action }}"' },
            { if: "github.event.action == 'awesome'", name: 'Update assets and games', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} awesome commit' },
            { if: "github.event.action == 'docs'", name: 'Update docs', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} docs searchindex commit' },
            { if: "github.event.action == 'refdoc'", name: 'Update refdoc', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} refdoc searchindex commit' },
            { if: "github.event.action == 'examples'", name: 'Update examples', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} examples commit' },
            { if: "github.event.action == 'extension-push'", name: 'Update extension-push', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} extension-push commit' },
            { if: "github.event.action == 'extension-iap'", name: 'Update extension-iap', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} extension-iap commit' },
            { if: "github.event.action == 'extension-webview'", name: 'Update extension-webview', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} extension-webview commit' },
            { if: "github.event.action == 'extension-facebook'", name: 'Update extension-facebook', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} extension-facebook commit' },
            { if: "github.event.action == 'extension-firebase'", name: 'Update extension-firebase', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} extension-firebase commit' },
            { if: "github.event.action == 'extension-gpgs'", name: 'Update extension-gpgs', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} extension-gpgs commit' },
            { if: "github.event.action == 'codepad'", name: 'Update codepad', run: 'python update.py --download --githubtoken=${{ secrets.SERVICES_GITHUB_TOKEN }} codepad commit' }
        ]
